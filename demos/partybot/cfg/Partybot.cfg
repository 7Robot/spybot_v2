#!/usr/bin/env python
PACKAGE = "partybot"

import roslib; roslib.load_manifest(PACKAGE)
from math import pi

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

gen.add("image_width", int_t, 0, "Image Width", 320, 0, 5000)
gen.add("image_height", int_t, 0, "Image Height", 240, 0, 4000)
gen.add("min_angular_speed", double_t, 0, "Minimum Angular Speed", 0.05, 0, pi)
gen.add("max_angular_speed", double_t, 0, "Maximum Angular Speed", pi, 0, pi*2)
gen.add("min_linear_speed", double_t, 0, "Minimum Angular Speed", 0.1, 0, 2.0)
gen.add("max_linear_speed", double_t, 0, "Maximum Angular Speed", 1.0, 0, 2.0)

gen.add("image_x_thresh", double_t, 0, "Image X Threshold", 0.02, 0, 1.0)
gen.add("image_size_thresh", double_t, 0, "Image Size Threshold", 0.02, 0, 1.0)

gen.add("search_speed", double_t, 0, "Turn Speed when searching", pi/10, 0, pi)
gen.add("search_angle", double_t, 0, "Turn angle when searching", pi/3.0, 0, pi)
gen.add("search_time", double_t, 0, "Pause time when searching", 5, 0, 30)

gen.add("drive_timeout", double_t, 0, "Timeout when following a person", 90, 0, 600)
gen.add("face_timeout", double_t, 0, "Face Timeout when following a person", 1, 0, 60)
gen.add("angle_gain", double_t, 0, "Angular Gain", 10, 0, 1000)
gen.add("target_size", double_t, 0, "Target Face Size", 1000, 0, 10000)
gen.add("target_gain", double_t, 0, "Target Size Gain", 0.5, 0, 10)

gen.add("pause_time", double_t, 0, "Offer Timeout", 30, 0, 180)

gen.add("return_speed", double_t, 0, "Return Speed", 0.5, 0, 2)
gen.add("return_angle", double_t, 0, "Return Angle", 2*pi/3, 0, 2*pi)
gen.add("return_dist", double_t, 0, "Return Distance", 2, 0, 10)

exit(gen.generate(PACKAGE, "partybot", "Partybot"))
